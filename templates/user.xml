<templateSet group="user">
  <template name="clo" value="console.log('$VAR$', $VAR$)$END$" description="console.log var" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="msd" value="const mapStateToProps = state =&gt; ({&#10;&#10;});&#10;&#10;const mapDispatchToProps = dispatch =&gt; ({&#10;    func: () =&gt; dispatch(func()),&#10;})" description="mapStateToProps and mapDispatchToProps" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cloi" value="console.log(&quot;$VAR$&quot;)$END$" description="console.log info" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="smart" value="import React from 'react';&#10;import PropTypes from 'prop-types';&#10;import injectSheet from 'react-jss';&#10;&#10;const propTypes = {};&#10;&#10;class $VAR$ extends React.Component {&#10;  render () {&#10;    &lt;div&gt;$VAR$$END$&lt;/div&gt;&#10;  }&#10;}&#10;&#10;const styles = theme =&gt; ( {} );&#10;&#10;$VAR$.propTypes = propTypes;&#10;&#10;export default injectSheet(styles)($VAR$);&#10;export {&#10;  $VAR$,&#10;  propTypes&#10;};&#10;" description="React Smart Boilerplate" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="inport" value="import {&#10;  inject,&#10;  observer,&#10;} from 'mobx-react';" description="imports inject, observer" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>